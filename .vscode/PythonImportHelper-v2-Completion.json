[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Teams",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Teams",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "EvaluationFormModel",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "AdminFeautures",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Teams",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "website.models",
        "description": "website.models",
        "isExtraImport": true,
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "CheckboxSelectMultiple",
        "importPath": "django.forms.widgets",
        "description": "django.forms.widgets",
        "isExtraImport": true,
        "detail": "django.forms.widgets",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "time",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "product_list",
        "importPath": "MVP.views",
        "description": "MVP.views",
        "isExtraImport": true,
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "website",
        "description": "website",
        "isExtraImport": true,
        "detail": "website",
        "documentation": {}
    },
    {
        "label": "collections",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "collections",
        "description": "collections",
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "now",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "make_aware",
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "isExtraImport": true,
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "roles_required",
        "importPath": "website.decorators",
        "description": "website.decorators",
        "isExtraImport": true,
        "detail": "website.decorators",
        "documentation": {}
    },
    {
        "label": "roles_required",
        "importPath": "website.decorators",
        "description": "website.decorators",
        "isExtraImport": true,
        "detail": "website.decorators",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "strip_tags",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "strip_tags",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "openpyxl",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "openpyxl",
        "description": "openpyxl",
        "detail": "openpyxl",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "never_cache",
        "importPath": "django.views.decorators.cache",
        "description": "django.views.decorators.cache",
        "isExtraImport": true,
        "detail": "django.views.decorators.cache",
        "documentation": {}
    },
    {
        "label": "require_http_methods",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "MVP",
        "importPath": "MVP.models",
        "description": "MVP.models",
        "isExtraImport": true,
        "detail": "MVP.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "mysql.connector",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mysql.connector",
        "description": "mysql.connector",
        "detail": "mysql.connector",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nimport os\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-&fq5c$jrr466qq)r7xg@*s3%mabq4%q%_0e*$wrdxd-fw852t#\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-&fq5c$jrr466qq)r7xg@*s3%mabq4%q%_0e*$wrdxd-fw852t#\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"website\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"website\",\n    \"MVP\",\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"core.urls\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR, 'templates'],\n        'APP_DIRS': True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR, 'templates'],\n        'APP_DIRS': True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": 'highbitreviewportal',\n        \"USER\": 'root',\n        \"PASSWORD\":'123456789',\n        \"HOST\":'localhost',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.mysql\",\n        \"NAME\": 'highbitreviewportal',\n        \"USER\": 'root',\n        \"PASSWORD\":'123456789',\n        \"HOST\":'localhost',\n        'PORT':'3306',\n    }\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATIC_ROOT = BASE_DIR / \"static\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATIC_ROOT = BASE_DIR / \"static\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATIC_ROOT = BASE_DIR / \"static\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATIC_ROOT = BASE_DIR / \"static\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# STATIC_ROOT = BASE_DIR / \"static\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST_USER = 'evaluationportal@highbitsol.com'\nEMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = 'leug ghsz xtxs mywt'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"\",include('website.urls')),\n    path(\"\",include('MVP.urls')),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0001_initial",
        "description": "MVP.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"website\", \"0021_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"ActivityType\",\n            fields=[\n                (",
        "detail": "MVP.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0002_alter_mvp_updated_by",
        "description": "MVP.migrations.0002_alter_mvp_updated_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"mvp\",\n            name=\"updated_by\",\n            field=models.CharField(blank=True, max_length=500, null=True),\n        ),",
        "detail": "MVP.migrations.0002_alter_mvp_updated_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0003_remove_mvp_updated_by",
        "description": "MVP.migrations.0003_remove_mvp_updated_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0002_alter_mvp_updated_by\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"mvp\",\n            name=\"updated_by\",\n        ),\n    ]",
        "detail": "MVP.migrations.0003_remove_mvp_updated_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0004_alter_mvp_name",
        "description": "MVP.migrations.0004_alter_mvp_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0003_remove_mvp_updated_by\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"mvp\",\n            name=\"name\",\n            field=models.TextField(),\n        ),",
        "detail": "MVP.migrations.0004_alter_mvp_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0005_alter_activity_created_at",
        "description": "MVP.migrations.0005_alter_activity_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0004_alter_mvp_name\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"activity\",\n            name=\"created_at\",\n            field=models.DateField(auto_now_add=True),\n        ),",
        "detail": "MVP.migrations.0005_alter_activity_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0006_alter_activity_options_alter_activitytype_options_and_more",
        "description": "MVP.migrations.0006_alter_activity_options_alter_activitytype_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0005_alter_activity_created_at\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"activity\",\n            options={\"verbose_name\": \"Activity\", \"verbose_name_plural\": \"Activities\"},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "MVP.migrations.0006_alter_activity_options_alter_activitytype_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0007_mvp_game_plan_alter_mvp_name",
        "description": "MVP.migrations.0007_mvp_game_plan_alter_mvp_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0006_alter_activity_options_alter_activitytype_options_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"game_plan\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0007_mvp_game_plan_alter_mvp_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0008_remove_mvp_game_plan",
        "description": "MVP.migrations.0008_remove_mvp_game_plan",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0007_mvp_game_plan_alter_mvp_name\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"mvp\",\n            name=\"game_plan\",\n        ),\n    ]",
        "detail": "MVP.migrations.0008_remove_mvp_game_plan",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0009_mvp_plan",
        "description": "MVP.migrations.0009_mvp_plan",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0008_remove_mvp_game_plan\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"plan\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0009_mvp_plan",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0010_mvp_cg_artist_mvp_modler_mvp_qa_mvp_sound_artist_and_more",
        "description": "MVP.migrations.0010_mvp_cg_artist_mvp_modler_mvp_qa_mvp_sound_artist_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0009_mvp_plan\"),\n        (\"website\", \"0024_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"cg_artist\",\n            field=models.ManyToManyField(",
        "detail": "MVP.migrations.0010_mvp_cg_artist_mvp_modler_mvp_qa_mvp_sound_artist_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0011_mvp_updated_by",
        "description": "MVP.migrations.0011_mvp_updated_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0010_mvp_cg_artist_mvp_modler_mvp_qa_mvp_sound_artist_and_more\"),\n        (\"website\", \"0024_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"updated_by\",\n            field=models.ForeignKey(",
        "detail": "MVP.migrations.0011_mvp_updated_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0012_remove_mvp_cg_artist_remove_mvp_created_at_and_more",
        "description": "MVP.migrations.0012_remove_mvp_cg_artist_remove_mvp_created_at_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0011_mvp_updated_by\"),\n        (\"website\", \"0024_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"mvp\",\n            name=\"cg_artist\",\n        ),",
        "detail": "MVP.migrations.0012_remove_mvp_cg_artist_remove_mvp_created_at_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0013_mvp_development_starting_date",
        "description": "MVP.migrations.0013_mvp_development_starting_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0012_remove_mvp_cg_artist_remove_mvp_created_at_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"development_starting_date\",\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0013_mvp_development_starting_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0014_mvp_planning_starting_date",
        "description": "MVP.migrations.0014_mvp_planning_starting_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0013_mvp_development_starting_date\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"planning_starting_date\",\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0014_mvp_planning_starting_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0015_remove_mvp_planning_starting_date_and_more",
        "description": "MVP.migrations.0015_remove_mvp_planning_starting_date_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0014_mvp_planning_starting_date\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"mvp\",\n            name=\"planning_starting_date\",\n        ),\n        migrations.AlterField(",
        "detail": "MVP.migrations.0015_remove_mvp_planning_starting_date_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0016_mvp_is_archived",
        "description": "MVP.migrations.0016_mvp_is_archived",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0015_remove_mvp_planning_starting_date_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"is_archived\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "MVP.migrations.0016_mvp_is_archived",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0017_alter_mvp_current_phase",
        "description": "MVP.migrations.0017_alter_mvp_current_phase",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0016_mvp_is_archived\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"mvp\",\n            name=\"current_phase\",\n            field=models.CharField(\n                choices=[(\"MVP\", \"MVP\"), (\"Product\", \"Product\")], max_length=100",
        "detail": "MVP.migrations.0017_alter_mvp_current_phase",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0018_remove_mvp_is_active_mvp_status",
        "description": "MVP.migrations.0018_remove_mvp_is_active_mvp_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0017_alter_mvp_current_phase\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"mvp\",\n            name=\"is_active\",\n        ),\n        migrations.AddField(",
        "detail": "MVP.migrations.0018_remove_mvp_is_active_mvp_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0019_alter_mvp_current_phase",
        "description": "MVP.migrations.0019_alter_mvp_current_phase",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0018_remove_mvp_is_active_mvp_status\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"mvp\",\n            name=\"current_phase\",\n            field=models.CharField(\n                choices=[(\"MVP\", \"MVP\"), (\"Product\", \"Product\"), (\"Failed\", \"Failed\")],",
        "detail": "MVP.migrations.0019_alter_mvp_current_phase",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0020_activity_created_by",
        "description": "MVP.migrations.0020_activity_created_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0019_alter_mvp_current_phase\"),\n        (\"website\", \"0025_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"activity\",\n            name=\"created_by\",\n            field=models.ForeignKey(",
        "detail": "MVP.migrations.0020_activity_created_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0021_mvp_first_completion_date",
        "description": "MVP.migrations.0021_mvp_first_completion_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0020_activity_created_by\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"mvp\",\n            name=\"first_completion_date\",\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0021_mvp_first_completion_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0022_rename_notes_activity_changes_activity_remarks",
        "description": "MVP.migrations.0022_rename_notes_activity_changes_activity_remarks",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0021_mvp_first_completion_date\"),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name=\"activity\",\n            old_name=\"notes\",\n            new_name=\"changes\",\n        ),",
        "detail": "MVP.migrations.0022_rename_notes_activity_changes_activity_remarks",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0023_remove_activity_created_by",
        "description": "MVP.migrations.0023_remove_activity_created_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0022_rename_notes_activity_changes_activity_remarks\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"activity\",\n            name=\"created_by\",\n        ),\n    ]",
        "detail": "MVP.migrations.0023_remove_activity_created_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0024_activity_notes",
        "description": "MVP.migrations.0024_activity_notes",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0023_remove_activity_created_by\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"activity\",\n            name=\"notes\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0024_activity_notes",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0025_alter_activity_changes",
        "description": "MVP.migrations.0025_alter_activity_changes",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0024_activity_notes\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"activity\",\n            name=\"changes\",\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "MVP.migrations.0025_alter_activity_changes",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MVP.migrations.0026_activity_created_by",
        "description": "MVP.migrations.0026_activity_created_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"MVP\", \"0025_alter_activity_changes\"),\n        (\"website\", \"0028_alter_employee_confirmation_date\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"activity\",\n            name=\"created_by\",\n            field=models.ForeignKey(",
        "detail": "MVP.migrations.0026_activity_created_by",
        "documentation": {}
    },
    {
        "label": "MvpConfig",
        "kind": 6,
        "importPath": "MVP.apps",
        "description": "MVP.apps",
        "peekOfCode": "class MvpConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"MVP\"",
        "detail": "MVP.apps",
        "documentation": {}
    },
    {
        "label": "EmployeeModelMultipleChoiceField",
        "kind": 6,
        "importPath": "MVP.forms",
        "description": "MVP.forms",
        "peekOfCode": "class EmployeeModelMultipleChoiceField(forms.ModelMultipleChoiceField):\n    def label_from_instance(self, obj):\n        return f\"{obj.employee_name} ({obj.role})\"\nclass MVPForm(forms.ModelForm):\n    remarks = forms.CharField(widget=forms.Textarea(attrs={\"class\": \"custom-plan-field\"}), required=False)\n    name = forms.CharField(widget=forms.TextInput(attrs={\"class\": \"custom-char-field\"}))\n    plan = forms.CharField(widget=forms.Textarea(attrs={\"class\": \"custom-plan-field\"}))\n    start_date = forms.DateField(\n        widget=forms.DateInput(attrs={\"type\": \"date\", \"class\": \"custom-char-field\"})\n    )",
        "detail": "MVP.forms",
        "documentation": {}
    },
    {
        "label": "MVPForm",
        "kind": 6,
        "importPath": "MVP.forms",
        "description": "MVP.forms",
        "peekOfCode": "class MVPForm(forms.ModelForm):\n    remarks = forms.CharField(widget=forms.Textarea(attrs={\"class\": \"custom-plan-field\"}), required=False)\n    name = forms.CharField(widget=forms.TextInput(attrs={\"class\": \"custom-char-field\"}))\n    plan = forms.CharField(widget=forms.Textarea(attrs={\"class\": \"custom-plan-field\"}))\n    start_date = forms.DateField(\n        widget=forms.DateInput(attrs={\"type\": \"date\", \"class\": \"custom-char-field\"})\n    )\n    end_date = forms.DateField(\n        required=False,\n        widget=forms.DateInput(attrs={\"type\": \"date\", \"class\": \"custom-char-field\"}),",
        "detail": "MVP.forms",
        "documentation": {}
    },
    {
        "label": "MVPFilterForm",
        "kind": 6,
        "importPath": "MVP.forms",
        "description": "MVP.forms",
        "peekOfCode": "class MVPFilterForm(forms.Form):\n    teams = Teams.objects.all()\n    name = forms.CharField(\n        widget=forms.TextInput(attrs={\"class\": \"filter-box\"}),\n        required=False,\n        label=\"Name\",\n    )\n    team_name = forms.ChoiceField(\n        widget=forms.Select(attrs={\"class\": \"team-filter-box\"}),\n        choices=[(\"\", \"Any\")] + [(team.id, team.team_name) for team in teams],",
        "detail": "MVP.forms",
        "documentation": {}
    },
    {
        "label": "ActivityTypeForm",
        "kind": 6,
        "importPath": "MVP.forms",
        "description": "MVP.forms",
        "peekOfCode": "class ActivityTypeForm(forms.ModelForm):\n    name = forms.CharField(\n        widget=forms.TextInput(attrs={\"class\": \"custom-act-text-field\"})\n    )\n    class Meta:\n        model = ActivityType\n        fields = [\"name\"]\nclass ActivityForm(forms.ModelForm):\n    mvp = forms.ModelChoiceField(\n        queryset=MVP.objects.all(),",
        "detail": "MVP.forms",
        "documentation": {}
    },
    {
        "label": "ActivityForm",
        "kind": 6,
        "importPath": "MVP.forms",
        "description": "MVP.forms",
        "peekOfCode": "class ActivityForm(forms.ModelForm):\n    mvp = forms.ModelChoiceField(\n        queryset=MVP.objects.all(),\n        widget=forms.Select(attrs={\"class\": \"custom-act-field\"}),\n    )\n    activity_type = forms.ModelChoiceField(\n        queryset=ActivityType.objects.all(),\n        widget=forms.Select(attrs={\"class\": \"custom-act-field\"}),\n    )\n    changes = forms.CharField(widget=forms.Textarea(attrs={\"class\": \"custom-notes-text-field\"}),required=False)",
        "detail": "MVP.forms",
        "documentation": {}
    },
    {
        "label": "MVP",
        "kind": 6,
        "importPath": "MVP.models",
        "description": "MVP.models",
        "peekOfCode": "class MVP(models.Model):\n    name = models.CharField(max_length=100)\n    plan=models.TextField(null=True, blank=True)\n    team_name=models.ForeignKey(Teams,on_delete=models.CASCADE)        \n    updated_by=models.ForeignKey(Employee,on_delete=models.CASCADE,null=True)\n    start_date = models.DateField()\n    status = models.CharField(max_length=100,choices=[('Pause', 'Pause'), ('Completed', 'Completed'), ('Active','Active')],default='Active')\n    end_date = models.DateField(null=True, blank=True)\n    current_phase = models.CharField(max_length=100,choices=[('MVP', 'MVP'), ('Product', 'Product'),('Failed','Failed')],default='MVP')\n    developers = models.ManyToManyField(Employee, related_name='developers')",
        "detail": "MVP.models",
        "documentation": {}
    },
    {
        "label": "ActivityType",
        "kind": 6,
        "importPath": "MVP.models",
        "description": "MVP.models",
        "peekOfCode": "class ActivityType(models.Model):\n    name = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\n    class Meta:\n        verbose_name = \"Activity Type\"  \n        verbose_name_plural = \"Activity Types\"\nclass Activity(models.Model):\n    mvp = models.ForeignKey(MVP,on_delete=models.CASCADE)\n    activity_type = models.ForeignKey(ActivityType,on_delete=models.CASCADE)",
        "detail": "MVP.models",
        "documentation": {}
    },
    {
        "label": "Activity",
        "kind": 6,
        "importPath": "MVP.models",
        "description": "MVP.models",
        "peekOfCode": "class Activity(models.Model):\n    mvp = models.ForeignKey(MVP,on_delete=models.CASCADE)\n    activity_type = models.ForeignKey(ActivityType,on_delete=models.CASCADE)\n    team_name=models.ForeignKey(Teams,on_delete=models.CASCADE,null=True)\n    notes=models.TextField(null=True, blank=True)\n    changes=models.TextField(null=True, blank=True)\n    created_at=models.DateField(auto_now_add=True)\n    remarks=models.TextField(null=True, blank=True)\n    created_by=models.ForeignKey(Employee,on_delete=models.CASCADE,null=True)\n    def __str__(self):",
        "detail": "MVP.models",
        "documentation": {}
    },
    {
        "label": "mvp_form",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def mvp_form(request):\n    if request.method == \"POST\":\n        form = MVPForm(request.POST, request=request)\n        if form.is_valid():\n            mvp = form.save(commit=False)\n            employee = Employee.objects.get(employee_email=request.user.username)\n            mvp.team_name = employee.team\n            mvp.save()\n            form.save_m2m()\n            return redirect(\"mvp_list\")",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "mvp_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def mvp_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    user_team = employee.team\n    if employee.mvp_role == \"Super\":\n        mvps = (\n            MVP.objects.filter(current_phase=\"MVP\", is_archived=False).order_by(\"-id\")\n            if user_team\n            else MVP.objects.none()",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "product_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def product_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    user_team = employee.team\n    if employee.mvp_role == \"Super\":\n        mvps = (\n            MVP.objects.filter(current_phase=\"Product\", is_archived=False).order_by(\"-id\")\n            if user_team\n            else MVP.objects.none()",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "archive_mvp",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def archive_mvp(request, pk):\n    user=request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    mvp = get_object_or_404(MVP, pk=pk)\n    mvp.updated_by=employee\n    mvp.is_archived = True\n    mvp.save()\n    return redirect('mvp_list')\n@login_required\ndef unarchive_mvp(request, pk):",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "unarchive_mvp",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def unarchive_mvp(request, pk):\n    mvp = get_object_or_404(MVP, pk=pk)\n    mvp.is_archived = False\n    mvp.save()\n    return redirect('archive_list')\n@login_required\ndef archive_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "archive_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def archive_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    user_team = employee.team\n    if employee.mvp_role == \"Super\":\n        mvps = (\n            MVP.objects.filter(current_phase=\"Archive\").order_by(\"-id\")\n            if user_team\n            else MVP.objects.none()",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "edit_mvp",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def edit_mvp(request, pk):\n    mvp = get_object_or_404(MVP, pk=pk)\n    first_completion_date = mvp.first_completion_date\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    if request.method == \"POST\":\n        form = MVPForm(request.POST, instance=mvp, request=request)\n        if form.is_valid():\n            mvp_instance = form.save(commit=False)\n            mvp_instance.updated_by = employee  ",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "activity_form",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def activity_form(request):\n    if request.method == \"POST\":\n        form = ActivityForm(request.POST, user=request.user)\n        if form.is_valid():\n            activity = form.save(commit=False)\n            employee = Employee.objects.get(employee_email=request.user.username)\n            activity.team_name = employee.team\n            activity.created_by = employee\n            activity.save()\n            form.save_m2m()",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "activity_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def activity_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    try:\n        employee = Employee.objects.get(employee_email=user.username)\n        user_team = employee.team\n    except Employee.DoesNotExist:\n        user_team = None\n    if employee.mvp_role == \"Super\":\n        activities = Activity.objects.order_by(\"-id\")",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "failed_mvp_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def failed_mvp_list(request):\n    form = MVPFilterForm(request.GET)\n    user = request.user\n    employee = Employee.objects.get(employee_email=user.username)\n    user_team = employee.team\n    if employee.mvp_role == \"Super\":\n        mvps = (\n            MVP.objects.filter(current_phase=\"Failed\", is_archived=False).order_by(\"-id\")\n            if user_team\n            else MVP.objects.none()",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "activity_types_list",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def activity_types_list(request):\n    activities = ActivityType.objects.all()\n    return render(request, \"activity_type_list.html\", {\"activities\": activities})\n@login_required\ndef edit_activity_type(request, pk):\n    mvp = get_object_or_404(MVP, pk=pk)\n    activity = get_object_or_404(ActivityType, id=pk)\n    if request.method == \"POST\":\n        form = ActivityTypeForm(request.POST, instance=activity)\n        if form.is_valid():",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "edit_activity_type",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def edit_activity_type(request, pk):\n    mvp = get_object_or_404(MVP, pk=pk)\n    activity = get_object_or_404(ActivityType, id=pk)\n    if request.method == \"POST\":\n        form = ActivityTypeForm(request.POST, instance=activity)\n        if form.is_valid():\n            if mvp.first_completion_date:\n                form.instance.first_completion_date = mvp.first_completion_date\n            form.save()\n            return redirect(\"activity_type_list\")",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "add_activity_type",
        "kind": 2,
        "importPath": "MVP.views",
        "description": "MVP.views",
        "peekOfCode": "def add_activity_type(request):\n    if request.method == \"POST\":\n        form = ActivityTypeForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect(\"activity_type_list\")\n    else:\n        form = ActivityTypeForm()\n    return render(request, \"add_activity_type.html\", {\"form\": form})",
        "detail": "MVP.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0001_initial",
        "description": "website.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"EvaluationFormModel\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "website.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0002_evaluationformmodel_employee",
        "description": "website.migrations.0002_evaluationformmodel_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"employee\",\n            field=models.ForeignKey(\n                default=5,",
        "detail": "website.migrations.0002_evaluationformmodel_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0003_evaluationformmodel_evaluated_by",
        "description": "website.migrations.0003_evaluationformmodel_evaluated_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0002_evaluationformmodel_employee\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"evaluated_by\",\n            field=models.ForeignKey(",
        "detail": "website.migrations.0003_evaluationformmodel_evaluated_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0004_alter_employee_options_and_more",
        "description": "website.migrations.0004_alter_employee_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0003_evaluationformmodel_evaluated_by\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"employee\",\n            options={\"verbose_name\": \"Employee\", \"verbose_name_plural\": \"Employees\"},\n        ),\n        migrations.AlterModelOptions(",
        "detail": "website.migrations.0004_alter_employee_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0005_employee_highbit_experience_and_more",
        "description": "website.migrations.0005_employee_highbit_experience_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0004_alter_employee_options_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"highbit_experience\",\n            field=models.CharField(blank=True, max_length=255),\n        ),",
        "detail": "website.migrations.0005_employee_highbit_experience_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0006_evaluationformmodel__weighted_average",
        "description": "website.migrations.0006_evaluationformmodel__weighted_average",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0005_employee_highbit_experience_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"_weighted_average\",\n            field=models.FloatField(blank=True, null=True),\n        ),",
        "detail": "website.migrations.0006_evaluationformmodel__weighted_average",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0007_evaluationformmodel_evaluation_for_and_more",
        "description": "website.migrations.0007_evaluationformmodel_evaluation_for_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0006_evaluationformmodel__weighted_average\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"evaluation_for\",\n            field=models.CharField(\n                choices=[",
        "detail": "website.migrations.0007_evaluationformmodel_evaluation_for_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0008_alter_evaluationformmodel_evaluation_date",
        "description": "website.migrations.0008_alter_evaluationformmodel_evaluation_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0007_evaluationformmodel_evaluation_for_and_more\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"evaluationformmodel\",\n            name=\"evaluation_date\",\n            field=models.DateField(default=datetime.date.today, editable=False),\n        ),",
        "detail": "website.migrations.0008_alter_evaluationformmodel_evaluation_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0009_employee_joining_date",
        "description": "website.migrations.0009_employee_joining_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0008_alter_evaluationformmodel_evaluation_date\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"joining_date\",\n            field=models.DateField(null=True),\n        ),",
        "detail": "website.migrations.0009_employee_joining_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0010_alter_evaluationformmodel_evaluation_for_and_more",
        "description": "website.migrations.0010_alter_evaluationformmodel_evaluation_for_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0009_employee_joining_date\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"evaluationformmodel\",\n            name=\"evaluation_for\",\n            field=models.CharField(max_length=255),\n        ),",
        "detail": "website.migrations.0010_alter_evaluationformmodel_evaluation_for_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0011_adminfeautures_alter_evaluationformmodel_hr_marks",
        "description": "website.migrations.0011_adminfeautures_alter_evaluationformmodel_hr_marks",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0010_alter_evaluationformmodel_evaluation_for_and_more\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"AdminFeautures\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "website.migrations.0011_adminfeautures_alter_evaluationformmodel_hr_marks",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0012_alter_adminfeautures_form_enabling_date",
        "description": "website.migrations.0012_alter_adminfeautures_form_enabling_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0011_adminfeautures_alter_evaluationformmodel_hr_marks\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"adminfeautures\",\n            name=\"form_enabling_date\",\n            field=models.IntegerField(),\n        ),",
        "detail": "website.migrations.0012_alter_adminfeautures_form_enabling_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0013_evaluationformmodel_time_stamp",
        "description": "website.migrations.0013_evaluationformmodel_time_stamp",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0012_alter_adminfeautures_form_enabling_date\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"time_stamp\",\n            field=models.TimeField(auto_now=True),\n        ),",
        "detail": "website.migrations.0013_evaluationformmodel_time_stamp",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0014_alter_evaluationformmodel_evaluation_for",
        "description": "website.migrations.0014_alter_evaluationformmodel_evaluation_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0013_evaluationformmodel_time_stamp\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"evaluationformmodel\",\n            name=\"evaluation_for\",\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "website.migrations.0014_alter_evaluationformmodel_evaluation_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0015_evaluationformmodel_previous_month_and_more",
        "description": "website.migrations.0015_evaluationformmodel_previous_month_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0014_alter_evaluationformmodel_evaluation_for\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"evaluationformmodel\",\n            name=\"previous_month\",\n            field=models.CharField(blank=True, editable=False, max_length=20),\n        ),",
        "detail": "website.migrations.0015_evaluationformmodel_previous_month_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0016_remove_employee_highbit_experience",
        "description": "website.migrations.0016_remove_employee_highbit_experience",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0015_evaluationformmodel_previous_month_and_more\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"employee\",\n            name=\"highbit_experience\",\n        ),\n    ]",
        "detail": "website.migrations.0016_remove_employee_highbit_experience",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0017_adminfeautures_enable_weightage_calculation",
        "description": "website.migrations.0017_adminfeautures_enable_weightage_calculation",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0016_remove_employee_highbit_experience\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"adminfeautures\",\n            name=\"enable_weightage_calculation\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "website.migrations.0017_adminfeautures_enable_weightage_calculation",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0018_alter_adminfeautures_options_and_more",
        "description": "website.migrations.0018_alter_adminfeautures_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0017_adminfeautures_enable_weightage_calculation\"),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name=\"adminfeautures\",\n            options={\n                \"verbose_name\": \"Admin Feature\",\n                \"verbose_name_plural\": \"Admin Features\",",
        "detail": "website.migrations.0018_alter_adminfeautures_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0019_remove_adminfeautures_enable_weightage_calculation_and_more",
        "description": "website.migrations.0019_remove_adminfeautures_enable_weightage_calculation_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0018_alter_adminfeautures_options_and_more\"),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name=\"adminfeautures\",\n            name=\"enable_weightage_calculation\",\n        ),\n        migrations.AddField(",
        "detail": "website.migrations.0019_remove_adminfeautures_enable_weightage_calculation_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0020_employee_is_active",
        "description": "website.migrations.0020_employee_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0019_remove_adminfeautures_enable_weightage_calculation_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"is_active\",\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "website.migrations.0020_employee_is_active",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0021_employee_mvp_role",
        "description": "website.migrations.0021_employee_mvp_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0020_employee_is_active\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"mvp_role\",\n            field=models.CharField(\n                choices=[(\"Planner\", \"Planner\"), (\"Developer\", \"Developer\")],",
        "detail": "website.migrations.0021_employee_mvp_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0022_alter_employee_mvp_role",
        "description": "website.migrations.0022_alter_employee_mvp_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0021_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"employee\",\n            name=\"mvp_role\",\n            field=models.CharField(\n                choices=[",
        "detail": "website.migrations.0022_alter_employee_mvp_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0023_alter_employee_mvp_role",
        "description": "website.migrations.0023_alter_employee_mvp_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0022_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"employee\",\n            name=\"mvp_role\",\n            field=models.CharField(\n                blank=True,",
        "detail": "website.migrations.0023_alter_employee_mvp_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0024_alter_employee_mvp_role",
        "description": "website.migrations.0024_alter_employee_mvp_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0023_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"employee\",\n            name=\"mvp_role\",\n            field=models.CharField(\n                blank=True,",
        "detail": "website.migrations.0024_alter_employee_mvp_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0025_alter_employee_mvp_role",
        "description": "website.migrations.0025_alter_employee_mvp_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0024_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"employee\",\n            name=\"mvp_role\",\n            field=models.CharField(\n                blank=True,",
        "detail": "website.migrations.0025_alter_employee_mvp_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0026_employee_grade",
        "description": "website.migrations.0026_employee_grade",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0025_alter_employee_mvp_role\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"grade\",\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "website.migrations.0026_employee_grade",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0027_employee_is_permanent",
        "description": "website.migrations.0027_employee_is_permanent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0026_employee_grade\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"employee\",\n            name=\"is_permanent\",\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "website.migrations.0027_employee_is_permanent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "website.migrations.0028_alter_employee_confirmation_date",
        "description": "website.migrations.0028_alter_employee_confirmation_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"website\", \"0027_employee_is_permanent\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"employee\",\n            name=\"confirmation_date\",\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "website.migrations.0028_alter_employee_confirmation_date",
        "documentation": {}
    },
    {
        "label": "TeamFilter",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class TeamFilter(admin.SimpleListFilter):\n    title = \"Team\"\n    parameter_name = \"team\"\n    def lookups(self, request, model_admin):\n        teams = Teams.objects.all()\n        return [(team.id, team.team_name) for team in teams]\n    def queryset(self, request, queryset):\n        if self.value():\n            return queryset.filter(employee__team_id=self.value())\n        return queryset",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "IsTeamLeadFilter",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class IsTeamLeadFilter(admin.SimpleListFilter):\n    title = \"Team Lead\"\n    parameter_name = \"team_lead\"\n    def lookups(self, request, model_admin):\n        team_lead_names = Employee.objects.filter(is_team_lead=True).values_list(\n            \"employee_name\", flat=True\n        )\n        return [(name, name) for name in team_lead_names]\n    def queryset(self, request, queryset1):\n        if self.value():",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "EmployeeAdminForm",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class EmployeeAdminForm(forms.ModelForm):\n    class Meta:\n        model = Employee\n        exclude = [\"username\"]\ndef calculate_quarterly_average(employee, end_date):\n    start_month = end_date.month - 3\n    start_year = end_date.year if start_month > 0 else end_date.year - 1\n    start_month = start_month % 12 if start_month > 0 else start_month + 12\n    target_months = []\n    for i in range(3):",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "EmployeeInformation",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class EmployeeInformation(admin.ModelAdmin):\n    list_display = (\"employee_id\", \"employee_name\",\"role\",\"is_permanent\",\"is_active\", \"team\", \"team_lead\")\n    readonly_fields = (\"is_permanent\",)\n    search_fields = [\"employee_id\", \"employee_name\"]\n    list_filter = [\"team\", \"is_team_lead\", IsTeamLeadFilter]\n    actions = [send_quarterly_evaluation_email]\n    exclude = [\"username\", \"password\", \"grade\"]\n    def formfield_for_foreignkey(self, db_field, request, **kwargs):\n        if db_field.name == \"team_lead\":\n            kwargs[\"queryset\"] = Employee.objects.filter(is_team_lead=True)",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "WeightedAverageFilter",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class WeightedAverageFilter(admin.SimpleListFilter):\n    title = \"Weighted Average Calculated\"\n    parameter_name = \"_weighted_average\"\n    def lookups(self, request, model_admin):\n        return (\n            (\"yes\", \"Yes\"),\n            (\"no\", \"No\"),\n        )\n    def queryset(self, request, queryset):\n        if self.value() == \"yes\":",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "EvaluationFormModelAdmin",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class EvaluationFormModelAdmin(admin.ModelAdmin):\n    list_display = [\n        \"employee_id\",\n        \"employee\",\n        \"employee_role\",\n        \"employee_email\",\n        \"employee_team\",\n        \"evaluated_by\",\n        \"evaluation_for\",\n        \"evaluation_date\",",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "TeamsAdmin",
        "kind": 6,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "class TeamsAdmin(admin.ModelAdmin):\n    list_display = (\"team_name\", \"evaluations_submitted_status\")\n    list_filter = (\"team_name\",)\n    def evaluations_submitted_status(self, obj):\n        return obj.evaluations_submitted\n    evaluations_submitted_status.boolean = True\n    evaluations_submitted_status.short_description = \"Evaluations Submitted\"\nadmin.site.register(Teams, TeamsAdmin)\nadmin.site.register(Employee, EmployeeInformation)\nadmin.site.register(EvaluationFormModel, EvaluationFormModelAdmin)",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "send_evaluation_email",
        "kind": 2,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "def send_evaluation_email(modeladmin, request, queryset):\n    email_count=0\n    for evaluation in queryset:\n        employee = evaluation.employee\n        team_lead_name = (\n            employee.team_lead.employee_name if employee.team_lead else \"N/A\"\n        )\n        email_template = \"evaluation_email.html\"\n        context = {\n            \"employee_name\": employee.employee_name,",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "calculate_quarterly_average",
        "kind": 2,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "def calculate_quarterly_average(employee, end_date):\n    start_month = end_date.month - 3\n    start_year = end_date.year if start_month > 0 else end_date.year - 1\n    start_month = start_month % 12 if start_month > 0 else start_month + 12\n    target_months = []\n    for i in range(3):\n        target_month = (start_month + i - 1) % 12 + 1\n        target_year = start_year if start_month + i <= 12 else start_year + 1\n        month_name = date(1900, target_month, 1).strftime(\"%B\")\n        target_months.append(f\"{month_name} {target_year}\")",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "send_quarterly_evaluation_email",
        "kind": 2,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "def send_quarterly_evaluation_email(modeladmin, request, queryset):\n    end_date = date.today()\n    email_count = 0\n    for employee in queryset:\n        average_weighted_score, grade, month_averages = calculate_quarterly_average(\n            employee, end_date\n        )\n        if average_weighted_score is None:\n            continue\n        team_lead_name = (",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "export_to_excel",
        "kind": 2,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "def export_to_excel(modeladmin, request, queryset):\n    response = HttpResponse(\n        content_type=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    )\n    response[\"Content-Disposition\"] = \"attachment; filename=evaluation_form.xlsx\"\n    wb = openpyxl.Workbook()\n    ws = wb.active\n    ws.title = \"EvaluationForm\"\n    columns = [\n        \"Employee\",",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "admin.site.site_title = \"Highbit HR Admin Panel\"\nadmin.site.site_header = \"HR Admin Panel\"\nclass TeamFilter(admin.SimpleListFilter):\n    title = \"Team\"\n    parameter_name = \"team\"\n    def lookups(self, request, model_admin):\n        teams = Teams.objects.all()\n        return [(team.id, team.team_name) for team in teams]\n    def queryset(self, request, queryset):\n        if self.value():",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "admin.site.site_header = \"HR Admin Panel\"\nclass TeamFilter(admin.SimpleListFilter):\n    title = \"Team\"\n    parameter_name = \"team\"\n    def lookups(self, request, model_admin):\n        teams = Teams.objects.all()\n        return [(team.id, team.team_name) for team in teams]\n    def queryset(self, request, queryset):\n        if self.value():\n            return queryset.filter(employee__team_id=self.value())",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "send_evaluation_email.short_description",
        "kind": 5,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "send_evaluation_email.short_description = (\n    \"Send monthly evaluation email to selected employees\"\n)\nclass IsTeamLeadFilter(admin.SimpleListFilter):\n    title = \"Team Lead\"\n    parameter_name = \"team_lead\"\n    def lookups(self, request, model_admin):\n        team_lead_names = Employee.objects.filter(is_team_lead=True).values_list(\n            \"employee_name\", flat=True\n        )",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "send_quarterly_evaluation_email.short_description",
        "kind": 5,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "send_quarterly_evaluation_email.short_description = (\n    \"Send quarterly evaluation email to selected employees\"\n)\nclass EmployeeInformation(admin.ModelAdmin):\n    list_display = (\"employee_id\", \"employee_name\",\"role\",\"is_permanent\",\"is_active\", \"team\", \"team_lead\")\n    readonly_fields = (\"is_permanent\",)\n    search_fields = [\"employee_id\", \"employee_name\"]\n    list_filter = [\"team\", \"is_team_lead\", IsTeamLeadFilter]\n    actions = [send_quarterly_evaluation_email]\n    exclude = [\"username\", \"password\", \"grade\"]",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "export_to_excel.short_description",
        "kind": 5,
        "importPath": "website.admin",
        "description": "website.admin",
        "peekOfCode": "export_to_excel.short_description = \"Export Selected to Excel\"\nclass EvaluationFormModelAdmin(admin.ModelAdmin):\n    list_display = [\n        \"employee_id\",\n        \"employee\",\n        \"employee_role\",\n        \"employee_email\",\n        \"employee_team\",\n        \"evaluated_by\",\n        \"evaluation_for\",",
        "detail": "website.admin",
        "documentation": {}
    },
    {
        "label": "WebsiteConfig",
        "kind": 6,
        "importPath": "website.apps",
        "description": "website.apps",
        "peekOfCode": "class WebsiteConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"website\"",
        "detail": "website.apps",
        "documentation": {}
    },
    {
        "label": "roles_required",
        "kind": 2,
        "importPath": "website.decorators",
        "description": "website.decorators",
        "peekOfCode": "def roles_required(*roles):\n    def decorator(view_func):\n        def _wrapped_view(request, *args, **kwargs):\n            if request.user.is_authenticated:\n                try:\n                    employee = Employee.objects.filter(employee_email=request.user.username).first()\n                    if employee and employee.mvp_role in roles:\n                        return view_func(request, *args, **kwargs)\n                    else:\n                        return HttpResponseForbidden(\"You do not have permission to access this page.\")",
        "detail": "website.decorators",
        "documentation": {}
    },
    {
        "label": "EvaluationForm",
        "kind": 6,
        "importPath": "website.forms",
        "description": "website.forms",
        "peekOfCode": "class EvaluationForm(forms.ModelForm):\n    tl_marks = forms.FloatField(min_value=0, max_value=10, label=\"Team Lead Marks out of 10\")\n    class Meta:\n        model = EvaluationFormModel\n        fields = [\"tl_marks\", \"feedback\"]\n        exclude = ['hr_marks',\"time_stamp\",\"evaluation_for\"]\nclass FileUploadForm(forms.Form):\n    file = forms.FileField(label=\"Select a CSV file\")",
        "detail": "website.forms",
        "documentation": {}
    },
    {
        "label": "FileUploadForm",
        "kind": 6,
        "importPath": "website.forms",
        "description": "website.forms",
        "peekOfCode": "class FileUploadForm(forms.Form):\n    file = forms.FileField(label=\"Select a CSV file\")",
        "detail": "website.forms",
        "documentation": {}
    },
    {
        "label": "Teams",
        "kind": 6,
        "importPath": "website.models",
        "description": "website.models",
        "peekOfCode": "class Teams(models.Model):\n    team_name = models.CharField(max_length=255)\n    def __str__(self):\n        return self.team_name\n    @property\n    def evaluations_submitted(self):\n        current_month = now().month\n        current_year = now().year\n        employees = self.members.filter(is_team_lead=False, is_active=True)\n        for employee in employees:",
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "website.models",
        "description": "website.models",
        "peekOfCode": "class Employee(models.Model):\n    is_active = models.BooleanField(default=True)\n    username = models.CharField(max_length=40, blank=True)\n    password = models.CharField(max_length=40, blank=True)\n    employee_id = models.CharField(primary_key=True, max_length=20, default=\"HB-\")\n    employee_name = models.CharField(max_length=255)\n    employee_email = models.EmailField()\n    mvp_role = models.CharField(choices=[('Super','Super'), (\"Growth Manager\",\"Growth Manager\"),('Team Lead','Team Lead'),('Planner', 'Planner'), ('Developer', 'Developer'), ('HR','HR')], max_length=20,null=True,blank=True)\n    previous_experience = models.CharField(max_length=255, blank=True)\n    joining_date = models.DateField(null=True, editable=True)",
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "EvaluationFormModel",
        "kind": 6,
        "importPath": "website.models",
        "description": "website.models",
        "peekOfCode": "class EvaluationFormModel(models.Model):\n    tl_marks = models.FloatField()\n    hr_marks = models.FloatField(\n        null=True,\n    )\n    feedback = models.TextField()\n    evaluation_date = models.DateField(default=date.today, editable=False)\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    evaluated_by = models.ForeignKey(\n        User, on_delete=models.SET_NULL, null=True, blank=True",
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "AdminFeautures",
        "kind": 6,
        "importPath": "website.models",
        "description": "website.models",
        "peekOfCode": "class AdminFeautures(models.Model):\n    form_disabling_date = models.IntegerField()\n    def __str__(self):\n        return \"Admin Features\"\n    class Meta:\n        verbose_name = \"Admin Feature\"\n        verbose_name_plural = \"Admin Features\"",
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "calculate_weighted_average",
        "kind": 2,
        "importPath": "website.models",
        "description": "website.models",
        "peekOfCode": "def calculate_weighted_average(sender, instance, created, **kwargs):\n    if not created:\n        if instance.tl_marks is not None and instance.hr_marks is not None:\n            tl_weight = 0.85\n            hr_weight = 0.15\n            old_weighted_avg = (\n                instance._weighted_average\n                if instance._weighted_average is not None\n                else 0.0\n            )",
        "detail": "website.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "website.urls",
        "description": "website.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.home, name=\"home\"),\n    path('quarterly_evaluations', views.view_quarterly_valuations, name='quarterly_evaluations'),\n    path(\"evaluations\", views.evaluations, name=\"evaluations\"),\n    path(\"logout\", views.logout_user, name=\"logout\"),\n    path(\"evaluation\", views.evaluation_view, name=\"evaluation\"),\n    path('upload/', views.upload_file, name='upload_file'),\n    path('export_csv/', views.export_csv, name='export_csv'),\n    path('send-emails/', views.send_emails, name='send_emails'),\n    path('update-grades/', views.update_grades, name='update_grades'),",
        "detail": "website.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def home(request):\n    if request.user.is_authenticated:\n        try:\n            emp = Employee.objects.get(employee_email=request.user.email)\n            if emp.mvp_role == \"Super\":\n                return redirect(\"super_dashboard\")\n            elif emp.mvp_role == \"Planner\":\n                return redirect(\"mvp_list\")\n            else:\n                return redirect(\"evaluations\")",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def logout_user(request):\n    logout(request)\n    return redirect(\"home\")\n@roles_required(\"Super\")\n@login_required\ndef super_dashboard(request):\n    emp = Employee.objects.get(employee_email=request.user)\n    mvp= MVP.objects.filter(current_phase=\"MVP\").all()\n    products = MVP.objects.filter(current_phase=\"Product\").all()\n    failed= MVP.objects.filter(current_phase=\"Failed\").all()",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "super_dashboard",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def super_dashboard(request):\n    emp = Employee.objects.get(employee_email=request.user)\n    mvp= MVP.objects.filter(current_phase=\"MVP\").all()\n    products = MVP.objects.filter(current_phase=\"Product\").all()\n    failed= MVP.objects.filter(current_phase=\"Failed\").all()\n    mvp_count = mvp.count()\n    product_count = products.count()\n    failed_count = failed.count()\n    employee_count = Employee.objects.filter(is_active=True).exclude(mvp_role='Super').count()\n    permenant_employee_count = Employee.objects.filter(is_active=True, is_permanent=True).count()",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "evaluations",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def evaluations(request):\n    today = date.today()\n    previous_month_date = today - timedelta(days=today.day)\n    previous_month = previous_month_date.strftime(\"%B\")\n    logged_in_user = request.user\n    emp = Employee.objects.get(employee_email=logged_in_user)\n    emps = Employee.objects.filter(team_lead=emp, is_active=True).all()\n    emp_count = emps.count()\n    current_month = now().month\n    current_year = now().year",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "evaluation_view",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def evaluation_view(request):\n    employee_id = request.GET.get(\"employee_id\")\n    form_submitted = False\n    disable_form = False\n    is_editing = False\n    form_disabling_date = AdminFeautures.objects.first()\n    selected_month = request.GET.get(\"selected_month\")\n    today = date.today()\n    first_day_of_current_month = today.replace(day=1)\n    last_month_date = first_day_of_current_month - timedelta(days=1)",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "view_quarterly_valuations",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def view_quarterly_valuations(request):\n    quarter = request.GET.get(\"quarter\")\n    year = request.GET.get(\"year\")\n    team_id = request.GET.get(\"team\")\n    grade = request.GET.get(\"grade\")\n    sort = request.GET.get(\"sort\")\n    order = request.GET.get(\"order\")\n    current_year = datetime.now().year\n    current_month = datetime.now().month\n    years = [current_year - i for i in range(5)]",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "export_csv",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def export_csv(request):\n    quarter = request.POST.get(\"quarter\")\n    year = request.POST.get(\"year\")\n    quarter_months = {\n        \"1\": [\"January\", \"February\", \"March\"],\n        \"2\": [\"April\", \"May\", \"June\"],\n        \"3\": [\"July\", \"August\", \"September\"],\n        \"4\": [\"October\", \"November\", \"December\"],\n    }\n    if quarter not in quarter_months or not year:",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "send_emails",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def send_emails(request):\n    email_count = 0\n    if request.method == \"POST\":\n        quarter = request.POST.get(\"quarter\")\n        year = request.POST.get(\"year\")\n        bonus_a = request.POST.get(\"bonusA\")\n        bonus_b = request.POST.get(\"bonusB\")\n        if (\n            not (bonus_a.isdigit() and bonus_b.isdigit())\n            or int(bonus_a) <= 0",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "upload_file",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def upload_file(request):\n    if request.method == \"POST\":\n        form = FileUploadForm(request.POST, request.FILES)\n        if form.is_valid():\n            csv_file = request.FILES[\"file\"]\n            handle_uploaded_file(csv_file)\n            return render(request, \"upload_success.html\")\n    else:\n        form = FileUploadForm()\n    context = {\"form\": form}",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "handle_uploaded_file",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def handle_uploaded_file(csv_file):\n    reader = csv.DictReader(csv_file.read().decode(\"utf-8\").splitlines())\n    for row in reader:\n        employee_id = row[\"employee_id\"]\n        joining_date_str = row.get(\"DOJ\", \"\")\n        if joining_date_str:\n            try:\n                joining_date = datetime.strptime(joining_date_str, \"%d-%b-%y\").date()\n            except ValueError:\n                print(",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "update_grades",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def update_grades(request):\n    if request.method == \"POST\":\n        quarter = request.POST.get(\"quarter\")\n        year = request.POST.get(\"year\")\n        team_id = request.POST.get(\"team\")\n        updated = update_employee_grades(quarter, year, team_id)\n        if updated:\n            messages.success(request, \"Grades updated successfully.\")\n        else:\n            messages.error(request, \"Failed to update grades.\")",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "update_employee_grades",
        "kind": 2,
        "importPath": "website.views",
        "description": "website.views",
        "peekOfCode": "def update_employee_grades(quarter, year, team_id):\n    quarter_months = {\n        \"1\": [\"January\", \"February\", \"March\"],\n        \"2\": [\"April\", \"May\", \"June\"],\n        \"3\": [\"July\", \"August\", \"September\"],\n        \"4\": [\"October\", \"November\", \"December\"],\n    }\n    if quarter not in quarter_months or not year:\n        return False\n    months = quarter_months[quarter]",
        "detail": "website.views",
        "documentation": {}
    },
    {
        "label": "mvp_role_permission",
        "kind": 2,
        "importPath": "context_processors",
        "description": "context_processors",
        "peekOfCode": "def mvp_role_permission(request):\n    if request.user.is_authenticated:\n        employee = Employee.objects.filter(employee_email=request.user.username).first()\n        if employee:\n            return {\"logged_in_user_role\": employee}\n        else:\n            return {\"logged_in_user_role\": None}\n    return {}",
        "detail": "context_processors",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"core.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]